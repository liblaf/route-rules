{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Route Rules","text":""},{"location":"reference/route_rules/","title":"route_rules","text":""},{"location":"reference/route_rules/#route_rules","title":"route_rules","text":"<p>Modules:</p> <ul> <li> <code>core</code>           \u2013            </li> <li> <code>export</code>           \u2013            </li> <li> <code>gen</code>           \u2013            </li> <li> <code>provider</code>           \u2013            </li> <li> <code>utils</code>           \u2013            </li> </ul> <p>Classes:</p> <ul> <li> <code>ArtifactMeta</code>           \u2013            </li> <li> <code>Behavior</code>           \u2013            </li> <li> <code>Builder</code>           \u2013            </li> <li> <code>Config</code>           \u2013            </li> <li> <code>Format</code>           \u2013            </li> <li> <code>Meta</code>           \u2013            </li> <li> <code>Provider</code>           \u2013            </li> <li> <code>ProviderMeta</code>           \u2013            </li> <li> <code>ProviderMihomo</code>           \u2013            </li> <li> <code>ProviderRegistry</code>           \u2013            </li> <li> <code>Recipe</code>           \u2013            </li> <li> <code>RecipeMeta</code>           \u2013            </li> <li> <code>RecipeWrapper</code>           \u2013            </li> <li> <code>RuleSet</code>           \u2013            <p>.</p> </li> </ul> <p>Functions:</p> <ul> <li> <code>download</code>             \u2013              </li> </ul>"},{"location":"reference/route_rules/#route_rules.ArtifactMeta","title":"ArtifactMeta","text":"<p>               Bases: <code>Struct</code></p> <p>Parameters:</p> <ul> <li> <code>behavior</code>               (<code>Behavior</code>)           \u2013            </li> <li> <code>format</code>               (<code>Format</code>)           \u2013            </li> <li> <code>path</code>               (<code>Path</code>)           \u2013            </li> <li> <code>size</code>               (<code>int</code>)           \u2013            </li> </ul> <p>Attributes:</p> <ul> <li> <code>behavior</code>               (<code>Behavior</code>)           \u2013            </li> <li> <code>format</code>               (<code>Format</code>)           \u2013            </li> <li> <code>path</code>               (<code>Path</code>)           \u2013            </li> <li> <code>size</code>               (<code>int</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/#route_rules.ArtifactMeta.behavior","title":"behavior  <code>instance-attribute</code>","text":"<pre><code>behavior: Behavior\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ArtifactMeta.format","title":"format  <code>instance-attribute</code>","text":"<pre><code>format: Format\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ArtifactMeta.path","title":"path  <code>instance-attribute</code>","text":"<pre><code>path: Path\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ArtifactMeta.size","title":"size  <code>instance-attribute</code>","text":"<pre><code>size: int\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Behavior","title":"Behavior","text":"<p>               Bases: <code>StrEnum</code></p> <p>Attributes:</p> <ul> <li> <code>CLASSICAL</code>           \u2013            </li> <li> <code>DOMAIN</code>           \u2013            </li> <li> <code>IPCIDR</code>           \u2013            </li> </ul>"},{"location":"reference/route_rules/#route_rules.Behavior.CLASSICAL","title":"CLASSICAL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CLASSICAL = auto()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Behavior.DOMAIN","title":"DOMAIN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DOMAIN = auto()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Behavior.IPCIDR","title":"IPCIDR  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>IPCIDR = auto()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Builder","title":"Builder","text":"<p>Parameters:</p> <ul> <li> <code>dist_dir</code>               (<code>Path</code>, default:                   <code>PosixPath('dist')</code> )           \u2013            </li> <li> <code>exporters</code>               (<code>list[ExporterMihomo]</code>, default:                   <code>[ExporterMihomo(behavior=&lt;Behavior.DOMAIN: 'domain'&gt;, format=&lt;Format.MRS: 'mrs'&gt;, export_path_template='mihomo/{slug}.{behavior}{format.ext}'), ExporterMihomo(behavior=&lt;Behavior.DOMAIN: 'domain'&gt;, format=&lt;Format.TEXT: 'text'&gt;, export_path_template='mihomo/{slug}.{behavior}{format.ext}'), ExporterMihomo(behavior=&lt;Behavior.IPCIDR: 'ipcidr'&gt;, format=&lt;Format.MRS: 'mrs'&gt;, export_path_template='mihomo/{slug}.{behavior}{format.ext}'), ExporterMihomo(behavior=&lt;Behavior.IPCIDR: 'ipcidr'&gt;, format=&lt;Format.TEXT: 'text'&gt;, export_path_template='mihomo/{slug}.{behavior}{format.ext}'), ExporterMihomo(behavior=&lt;Behavior.CLASSICAL: 'classical'&gt;, format=&lt;Format.TEXT: 'text'&gt;, export_path_template='mihomo/{slug}.{behavior}{format.ext}')]</code> )           \u2013            </li> <li> <code>recipes</code>               (<code>list[RecipeWrapper]</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> </li> </ul> <p>Methods:</p> <ul> <li> <code>build</code>             \u2013              </li> <li> <code>build_recipe</code>             \u2013              </li> <li> <code>load</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>dist_dir</code>               (<code>Path</code>)           \u2013            </li> <li> <code>exporters</code>               (<code>list[ExporterMihomo]</code>)           \u2013            </li> <li> <code>recipes</code>               (<code>list[RecipeWrapper]</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/#route_rules.Builder.dist_dir","title":"dist_dir  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dist_dir: Path = field(default=Path('dist'))\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Builder.exporters","title":"exporters  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exporters: list[ExporterMihomo] = field(\n    factory=_default_exporters\n)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Builder.recipes","title":"recipes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>recipes: list[RecipeWrapper] = field(factory=list)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Builder.build","title":"build  <code>async</code>","text":"<pre><code>build() -&gt; None\n</code></pre> Source code in <code>src/route_rules/gen/_builder.py</code> <pre><code>async def build(self) -&gt; None:\n    meta = Meta(build_time=datetime.datetime.now().astimezone())\n    for recipe in self.recipes:\n        meta.recipes.append(await self.build_recipe(recipe))\n    (self.dist_dir / \"meta.json\").write_bytes(meta.json_encode())\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Builder.build_recipe","title":"build_recipe  <code>async</code>","text":"<pre><code>build_recipe(recipe: RecipeWrapper) -&gt; RecipeMeta\n</code></pre> Source code in <code>src/route_rules/gen/_builder.py</code> <pre><code>async def build_recipe(self, recipe: RecipeWrapper) -&gt; RecipeMeta:\n    ruleset: RuleSet = await recipe.build()\n    meta = RecipeMeta(\n        name=recipe.name,\n        slug=recipe.slug,\n        statistics=await self._build_statistics(recipe, ruleset),\n    )\n    for provider in recipe.providers:\n        meta.providers.append(\n            ProviderMeta(\n                name=provider,\n                download_url=recipe.registry.download_url(provider),\n                preview_url=recipe.registry.preview_url(provider),\n            )\n        )\n    for exporter in self.exporters:\n        path: Path = exporter.export_path(recipe.slug)\n        size: int = exporter.export(self.dist_dir / path, ruleset)\n        if size == 0:\n            continue\n        meta.artifacts.append(\n            ArtifactMeta(\n                behavior=exporter.behavior,\n                format=exporter.format,\n                path=path,\n                size=size,\n            )\n        )\n    return meta\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Builder.load","title":"load  <code>classmethod</code>","text":"<pre><code>load(file: str | PathLike[str]) -&gt; Self\n</code></pre> Source code in <code>src/route_rules/gen/_builder.py</code> <pre><code>@classmethod\ndef load(cls, file: str | os.PathLike[str]) -&gt; Self:\n    config: Config = Config.load(file)\n    self: Self = cls()\n    for recipe_config in config.recipes:\n        self.recipes.append(RecipeWrapper.from_config(recipe_config))\n    return self\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Config","title":"Config  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Parameters:</p> <ul> <li> <code>recipes</code>               (<code>list[RecipeConfig]</code>)           \u2013            </li> </ul> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"RecipeConfig\": {\n      \"properties\": {\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"providers\": {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"title\": \"Providers\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"providers\"\n      ],\n      \"title\": \"RecipeConfig\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"recipes\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/RecipeConfig\"\n      },\n      \"title\": \"Recipes\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"recipes\"\n  ],\n  \"title\": \"Config\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>recipes</code>                 (<code>list[RecipeConfig]</code>)             </li> </ul>"},{"location":"reference/route_rules/#route_rules.Config.recipes","title":"recipes  <code>pydantic-field</code>","text":"<pre><code>recipes: list[RecipeConfig]\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Config.load","title":"load  <code>classmethod</code>","text":"<pre><code>load(file: str | PathLike[str]) -&gt; Self\n</code></pre> Source code in <code>src/route_rules/gen/_config.py</code> <pre><code>@classmethod\ndef load(cls, file: str | os.PathLike[str]) -&gt; Self:\n    file = Path(file)\n    data: Any = msgspec.yaml.decode(file.read_bytes())\n    return cls.model_validate(data)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Format","title":"Format","text":"<p>               Bases: <code>StrEnum</code></p> <p>Attributes:</p> <ul> <li> <code>MRS</code>           \u2013            </li> <li> <code>TEXT</code>           \u2013            </li> <li> <code>YAML</code>           \u2013            </li> <li> <code>ext</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/#route_rules.Format.MRS","title":"MRS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MRS = auto()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Format.TEXT","title":"TEXT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TEXT = auto()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Format.YAML","title":"YAML  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>YAML = auto()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Format.ext","title":"ext  <code>property</code>","text":"<pre><code>ext: str\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Meta","title":"Meta","text":"<p>               Bases: <code>Struct</code></p> <p>Parameters:</p> <ul> <li> <code>build_time</code>               (<code>datetime</code>)           \u2013            </li> <li> <code>recipes</code>               (<code>list[RecipeMeta]</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> </li> </ul> <p>Methods:</p> <ul> <li> <code>json_decode</code>             \u2013              </li> <li> <code>json_encode</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>build_time</code>               (<code>datetime</code>)           \u2013            </li> <li> <code>recipes</code>               (<code>list[RecipeMeta]</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/#route_rules.Meta.build_time","title":"build_time  <code>instance-attribute</code>","text":"<pre><code>build_time: datetime\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Meta.recipes","title":"recipes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>recipes: list[RecipeMeta] = field(default_factory=list)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Meta.json_decode","title":"json_decode  <code>classmethod</code>","text":"<pre><code>json_decode(data: Buffer | str) -&gt; Self\n</code></pre> Source code in <code>src/route_rules/gen/_meta.py</code> <pre><code>@classmethod\ndef json_decode(cls, data: Buffer | str) -&gt; Self:\n    return msgspec.json.decode(data, type=cls, dec_hook=dec_hook)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Meta.json_encode","title":"json_encode","text":"<pre><code>json_encode() -&gt; bytes\n</code></pre> Source code in <code>src/route_rules/gen/_meta.py</code> <pre><code>def json_encode(self) -&gt; bytes:\n    return msgspec.json.encode(self, enc_hook=enc_hook)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Provider","title":"Provider","text":"<p>               Bases: <code>ABC</code></p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>download_url_template</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url_template</code>               (<code>str</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            </li> </ul> <p>Methods:</p> <ul> <li> <code>download_url</code>             \u2013              </li> <li> <code>load</code>             \u2013              </li> <li> <code>preview_url</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>download_url_template</code>               (<code>str</code>)           \u2013            </li> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url_template</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/#route_rules.Provider.download_url_template","title":"download_url_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>download_url_template: str = field()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Provider.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = field()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Provider.preview_url_template","title":"preview_url_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>preview_url_template: str = field(\n    default=Factory(\n        _default_preview_url_template, takes_self=True\n    )\n)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Provider.download_url","title":"download_url","text":"<pre><code>download_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_abc.py</code> <pre><code>def download_url(self, name: str) -&gt; str:\n    name = urllib.parse.quote(name)\n    return self.download_url_template.format(name=name)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Provider.load","title":"load  <code>abstractmethod</code> <code>async</code>","text":"<pre><code>load(name: str) -&gt; RuleSet\n</code></pre> Source code in <code>src/route_rules/provider/_abc.py</code> <pre><code>@abc.abstractmethod\nasync def load(self, name: str) -&gt; RuleSet:\n    raise NotImplementedError\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Provider.preview_url","title":"preview_url","text":"<pre><code>preview_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_abc.py</code> <pre><code>def preview_url(self, name: str) -&gt; str:\n    name = urllib.parse.quote(name)\n    return self.preview_url_template.format(name=name)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderMeta","title":"ProviderMeta","text":"<p>               Bases: <code>Struct</code></p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>download_url</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url</code>               (<code>str</code>)           \u2013            </li> </ul> <p>Attributes:</p> <ul> <li> <code>download_url</code>               (<code>str</code>)           \u2013            </li> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/#route_rules.ProviderMeta.download_url","title":"download_url  <code>instance-attribute</code>","text":"<pre><code>download_url: str\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderMeta.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderMeta.preview_url","title":"preview_url  <code>instance-attribute</code>","text":"<pre><code>preview_url: str\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderMihomo","title":"ProviderMihomo","text":"<p>               Bases: <code>Provider</code></p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>download_url_template</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url_template</code>               (<code>str</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            </li> <li> <code>behavior</code>               (<code>Behavior</code>)           \u2013            </li> <li> <code>format</code>               (<code>Format</code>, default:                   <code>&lt;Format.YAML: 'yaml'&gt;</code> )           \u2013            </li> </ul> <p>Methods:</p> <ul> <li> <code>download_url</code>             \u2013              </li> <li> <code>load</code>             \u2013              </li> <li> <code>preview_url</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>behavior</code>               (<code>Behavior</code>)           \u2013            </li> <li> <code>download_url_template</code>               (<code>str</code>)           \u2013            </li> <li> <code>format</code>               (<code>Format</code>)           \u2013            </li> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url_template</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/#route_rules.ProviderMihomo.behavior","title":"behavior  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>behavior: Behavior = field(kw_only=True)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderMihomo.download_url_template","title":"download_url_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>download_url_template: str = field()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderMihomo.format","title":"format  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>format: Format = field(default=YAML, kw_only=True)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderMihomo.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = field()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderMihomo.preview_url_template","title":"preview_url_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>preview_url_template: str = field(\n    default=Factory(\n        _default_preview_url_template, takes_self=True\n    )\n)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderMihomo.download_url","title":"download_url","text":"<pre><code>download_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_abc.py</code> <pre><code>def download_url(self, name: str) -&gt; str:\n    name = urllib.parse.quote(name)\n    return self.download_url_template.format(name=name)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderMihomo.load","title":"load  <code>async</code>","text":"<pre><code>load(name: str) -&gt; RuleSet\n</code></pre> Source code in <code>src/route_rules/provider/mihomo/_provider.py</code> <pre><code>@override\n@cta.cachedmethod(lambda self: self._cache)\nasync def load(self, name: str) -&gt; RuleSet:\n    response: httpx.Response = await utils.download(self.download_url(name))\n    return decode(response.text, behavior=self.behavior, format=self.format)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderMihomo.preview_url","title":"preview_url","text":"<pre><code>preview_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_abc.py</code> <pre><code>def preview_url(self, name: str) -&gt; str:\n    name = urllib.parse.quote(name)\n    return self.preview_url_template.format(name=name)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderRegistry","title":"ProviderRegistry","text":"<p>Parameters:</p> <ul> <li> <code>registry</code>               (<code>dict[str, Provider]</code>, default:                   <code>&lt;class 'dict'&gt;</code> )           \u2013            <p>dict() -&gt; new empty dictionary dict(mapping) -&gt; new dictionary initialized from a mapping object\u2019s     (key, value) pairs dict(iterable) -&gt; new dictionary initialized as if via:     d = {}     for k, v in iterable:         d[k] = v dict(**kwargs) -&gt; new dictionary initialized with the name=value pairs     in the keyword argument list.  For example:  dict(one=1, two=2)</p> </li> </ul> <p>Methods:</p> <ul> <li> <code>download_url</code>             \u2013              </li> <li> <code>load</code>             \u2013              </li> <li> <code>presets</code>             \u2013              </li> <li> <code>preview_url</code>             \u2013              </li> <li> <code>register</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>registry</code>               (<code>dict[str, Provider]</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/#route_rules.ProviderRegistry.registry","title":"registry  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>registry: dict[str, Provider] = field(factory=dict)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderRegistry.download_url","title":"download_url","text":"<pre><code>download_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_registry.py</code> <pre><code>def download_url(self, name: str) -&gt; str:\n    provider: Provider\n    ruleset_name: str\n    provider, ruleset_name = self._parse_name(name)\n    return provider.download_url(ruleset_name)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderRegistry.load","title":"load  <code>async</code>","text":"<pre><code>load(name: str) -&gt; RuleSet\n</code></pre> Source code in <code>src/route_rules/provider/_registry.py</code> <pre><code>async def load(self, name: str) -&gt; RuleSet:\n    provider: Provider\n    ruleset_name: str\n    provider, ruleset_name = self._parse_name(name)\n    return await provider.load(ruleset_name)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderRegistry.presets","title":"presets  <code>cached</code> <code>classmethod</code>","text":"<pre><code>presets() -&gt; Self\n</code></pre> Source code in <code>src/route_rules/provider/_registry.py</code> <pre><code>@classmethod\n@functools.cache\ndef presets(cls) -&gt; Self:\n    self: Self = cls()\n    self.register(\n        ProviderMihomo(\n            \"blackmatrix7\",\n            \"https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/{name}/{name}.list\",\n            \"https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/Clash/{name}\",\n            behavior=Behavior.CLASSICAL,\n            format=Format.TEXT,\n        ),\n        ProviderMihomo(\n            \"dler-io\",\n            \"https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/{name}.yaml\",\n            \"https://github.com/dler-io/Rules/blob/main/Clash/Provider/{name}.yaml\",\n            behavior=Behavior.CLASSICAL,\n            format=Format.YAML,\n        ),\n        ProviderMihomo(\n            \"liblaf\",\n            \"https://raw.githubusercontent.com/liblaf/route-rules/main/rules/{name}.list\",\n            \"https://github.com/liblaf/route-rules/blob/main/rules/{name}.list\",\n            behavior=Behavior.DOMAIN,\n            format=Format.TEXT,\n        ),\n        ProviderMihomo(\n            \"MetaCubeX/geosite\",\n            \"https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/{name}.yaml\",\n            \"https://github.com/MetaCubeX/meta-rules-dat/blob/meta/geo/geosite/{name}.yaml\",\n            behavior=Behavior.DOMAIN,\n            format=Format.YAML,\n        ),\n        ProviderMihomo(\n            \"SukkaW/classical\",\n            \"https://ruleset.skk.moe/Clash/{name}.txt\",\n            behavior=Behavior.CLASSICAL,\n            format=Format.TEXT,\n        ),\n        ProviderMihomo(\n            \"SukkaW/domain\",\n            \"https://ruleset.skk.moe/Clash/{name}.txt\",\n            behavior=Behavior.DOMAIN,\n            format=Format.TEXT,\n        ),\n    )\n    return self\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderRegistry.preview_url","title":"preview_url","text":"<pre><code>preview_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_registry.py</code> <pre><code>def preview_url(self, name: str) -&gt; str:\n    provider: Provider\n    ruleset_name: str\n    provider, ruleset_name = self._parse_name(name)\n    return provider.preview_url(ruleset_name)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.ProviderRegistry.register","title":"register","text":"<pre><code>register(*providers: Provider) -&gt; None\n</code></pre> Source code in <code>src/route_rules/provider/_registry.py</code> <pre><code>def register(self, *providers: Provider) -&gt; None:\n    for provider in providers:\n        self.registry[provider.name] = provider\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Recipe","title":"Recipe","text":"<p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>providers</code>               (<code>list[str]</code>)           \u2013            </li> <li> <code>registry</code>               (<code>ProviderRegistry</code>, default:                   <code>ProviderRegistry(registry={'blackmatrix7': ProviderMihomo(name='blackmatrix7', download_url_template='https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/{name}/{name}.list', preview_url_template='https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/Clash/{name}', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.CLASSICAL: 'classical'&gt;, format=&lt;Format.TEXT: 'text'&gt;), 'dler-io': ProviderMihomo(name='dler-io', download_url_template='https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/{name}.yaml', preview_url_template='https://github.com/dler-io/Rules/blob/main/Clash/Provider/{name}.yaml', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.CLASSICAL: 'classical'&gt;, format=&lt;Format.YAML: 'yaml'&gt;), 'liblaf': ProviderMihomo(name='liblaf', download_url_template='https://raw.githubusercontent.com/liblaf/route-rules/main/rules/{name}.list', preview_url_template='https://github.com/liblaf/route-rules/blob/main/rules/{name}.list', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.DOMAIN: 'domain'&gt;, format=&lt;Format.TEXT: 'text'&gt;), 'MetaCubeX/geosite': ProviderMihomo(name='MetaCubeX/geosite', download_url_template='https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/{name}.yaml', preview_url_template='https://github.com/MetaCubeX/meta-rules-dat/blob/meta/geo/geosite/{name}.yaml', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.DOMAIN: 'domain'&gt;, format=&lt;Format.YAML: 'yaml'&gt;), 'SukkaW/classical': ProviderMihomo(name='SukkaW/classical', download_url_template='https://ruleset.skk.moe/Clash/{name}.txt', preview_url_template='https://ruleset.skk.moe/Clash/{name}.txt', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.CLASSICAL: 'classical'&gt;, format=&lt;Format.TEXT: 'text'&gt;), 'SukkaW/domain': ProviderMihomo(name='SukkaW/domain', download_url_template='https://ruleset.skk.moe/Clash/{name}.txt', preview_url_template='https://ruleset.skk.moe/Clash/{name}.txt', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.DOMAIN: 'domain'&gt;, format=&lt;Format.TEXT: 'text'&gt;)})</code> )           \u2013            </li> <li> <code>slug</code>               (<code>str</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            </li> </ul> <p>Methods:</p> <ul> <li> <code>build</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>providers</code>               (<code>list[str]</code>)           \u2013            </li> <li> <code>registry</code>               (<code>ProviderRegistry</code>)           \u2013            </li> <li> <code>slug</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/#route_rules.Recipe.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = field()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Recipe.providers","title":"providers  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>providers: list[str] = field()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Recipe.registry","title":"registry  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>registry: ProviderRegistry = field(\n    factory=presets, kw_only=True\n)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Recipe.slug","title":"slug  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>slug: str = field(\n    default=Factory(default_slug, takes_self=True),\n    kw_only=True,\n)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.Recipe.build","title":"build  <code>async</code>","text":"<pre><code>build() -&gt; RuleSet\n</code></pre> Source code in <code>src/route_rules/_recipe.py</code> <pre><code>@cta.cachedmethod(lambda self: self._cache)\nasync def build(self) -&gt; RuleSet:\n    ruleset: RuleSet = RuleSet.union(\n        *(await asyncio.gather(*(self.registry.load(p) for p in self.providers)))\n    )\n    ruleset = ruleset.optimize()\n    return ruleset\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RecipeMeta","title":"RecipeMeta","text":"<p>               Bases: <code>Struct</code></p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>slug</code>               (<code>str</code>)           \u2013            </li> <li> <code>artifacts</code>               (<code>list[ArtifactMeta]</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> </li> <li> <code>providers</code>               (<code>list[ProviderMeta]</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> </li> <li> <code>statistics</code>               (<code>RecipeStatistics</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            </li> </ul> <p>Attributes:</p> <ul> <li> <code>artifacts</code>               (<code>list[ArtifactMeta]</code>)           \u2013            </li> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>providers</code>               (<code>list[ProviderMeta]</code>)           \u2013            </li> <li> <code>slug</code>               (<code>str</code>)           \u2013            </li> <li> <code>statistics</code>               (<code>RecipeStatistics</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/#route_rules.RecipeMeta.artifacts","title":"artifacts  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>artifacts: list[ArtifactMeta] = field(default_factory=list)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RecipeMeta.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RecipeMeta.providers","title":"providers  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>providers: list[ProviderMeta] = field(default_factory=list)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RecipeMeta.slug","title":"slug  <code>instance-attribute</code>","text":"<pre><code>slug: str\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RecipeMeta.statistics","title":"statistics  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>statistics: RecipeStatistics = field(\n    default_factory=RecipeStatistics\n)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RecipeWrapper","title":"RecipeWrapper","text":"<p>               Bases: <code>Recipe</code></p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>providers</code>               (<code>list[str]</code>)           \u2013            </li> <li> <code>registry</code>               (<code>ProviderRegistry</code>, default:                   <code>ProviderRegistry(registry={'blackmatrix7': ProviderMihomo(name='blackmatrix7', download_url_template='https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/{name}/{name}.list', preview_url_template='https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/Clash/{name}', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.CLASSICAL: 'classical'&gt;, format=&lt;Format.TEXT: 'text'&gt;), 'dler-io': ProviderMihomo(name='dler-io', download_url_template='https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/{name}.yaml', preview_url_template='https://github.com/dler-io/Rules/blob/main/Clash/Provider/{name}.yaml', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.CLASSICAL: 'classical'&gt;, format=&lt;Format.YAML: 'yaml'&gt;), 'liblaf': ProviderMihomo(name='liblaf', download_url_template='https://raw.githubusercontent.com/liblaf/route-rules/main/rules/{name}.list', preview_url_template='https://github.com/liblaf/route-rules/blob/main/rules/{name}.list', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.DOMAIN: 'domain'&gt;, format=&lt;Format.TEXT: 'text'&gt;), 'MetaCubeX/geosite': ProviderMihomo(name='MetaCubeX/geosite', download_url_template='https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/{name}.yaml', preview_url_template='https://github.com/MetaCubeX/meta-rules-dat/blob/meta/geo/geosite/{name}.yaml', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.DOMAIN: 'domain'&gt;, format=&lt;Format.YAML: 'yaml'&gt;), 'SukkaW/classical': ProviderMihomo(name='SukkaW/classical', download_url_template='https://ruleset.skk.moe/Clash/{name}.txt', preview_url_template='https://ruleset.skk.moe/Clash/{name}.txt', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.CLASSICAL: 'classical'&gt;, format=&lt;Format.TEXT: 'text'&gt;), 'SukkaW/domain': ProviderMihomo(name='SukkaW/domain', download_url_template='https://ruleset.skk.moe/Clash/{name}.txt', preview_url_template='https://ruleset.skk.moe/Clash/{name}.txt', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.DOMAIN: 'domain'&gt;, format=&lt;Format.TEXT: 'text'&gt;)})</code> )           \u2013            </li> <li> <code>slug</code>               (<code>str</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            </li> </ul> <p>Methods:</p> <ul> <li> <code>build</code>             \u2013              </li> <li> <code>from_config</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>providers</code>               (<code>list[str]</code>)           \u2013            </li> <li> <code>registry</code>               (<code>ProviderRegistry</code>)           \u2013            </li> <li> <code>slug</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/#route_rules.RecipeWrapper.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = field()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RecipeWrapper.providers","title":"providers  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>providers: list[str] = field()\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RecipeWrapper.registry","title":"registry  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>registry: ProviderRegistry = field(\n    factory=presets, kw_only=True\n)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RecipeWrapper.slug","title":"slug  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>slug: str = field(\n    default=Factory(default_slug, takes_self=True),\n    kw_only=True,\n)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RecipeWrapper.build","title":"build  <code>async</code>","text":"<pre><code>build() -&gt; RuleSet\n</code></pre> Source code in <code>src/route_rules/_recipe.py</code> <pre><code>@cta.cachedmethod(lambda self: self._cache)\nasync def build(self) -&gt; RuleSet:\n    ruleset: RuleSet = RuleSet.union(\n        *(await asyncio.gather(*(self.registry.load(p) for p in self.providers)))\n    )\n    ruleset = ruleset.optimize()\n    return ruleset\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RecipeWrapper.from_config","title":"from_config  <code>classmethod</code>","text":"<pre><code>from_config(config: RecipeConfig) -&gt; Self\n</code></pre> Source code in <code>src/route_rules/gen/_recipe.py</code> <pre><code>@classmethod\ndef from_config(cls, config: RecipeConfig) -&gt; Self:\n    return cls(name=config.name, providers=config.providers)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RuleSet","title":"RuleSet","text":"<p>               Bases: <code>UserDict[str, set[str]]</code></p> <p>.</p> References <ol> <li>https://wiki.metacubex.one/en/config/rules/</li> </ol> <p>Methods:</p> <ul> <li> <code>__missing__</code>             \u2013              </li> <li> <code>__or__</code>             \u2013              </li> <li> <code>add</code>             \u2013              </li> <li> <code>optimize</code>             \u2013              </li> <li> <code>union</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>domain</code>               (<code>set[str]</code>)           \u2013            </li> <li> <code>domain_suffix</code>               (<code>set[str]</code>)           \u2013            </li> <li> <code>ip_cidr</code>               (<code>set[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/#route_rules.RuleSet.domain","title":"domain  <code>property</code>","text":"<pre><code>domain: set[str]\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RuleSet.domain_suffix","title":"domain_suffix  <code>property</code>","text":"<pre><code>domain_suffix: set[str]\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RuleSet.ip_cidr","title":"ip_cidr  <code>property</code>","text":"<pre><code>ip_cidr: set[str]\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RuleSet.__missing__","title":"__missing__","text":"<pre><code>__missing__(key: str) -&gt; set[str]\n</code></pre> Source code in <code>src/route_rules/core/_ruleset.py</code> <pre><code>def __missing__(self, key: str) -&gt; set[str]:\n    self[key] = set()\n    return self[key]\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RuleSet.__or__","title":"__or__","text":"<pre><code>__or__(other: Mapping[str, Set[str]]) -&gt; Self\n</code></pre> Source code in <code>src/route_rules/core/_ruleset.py</code> <pre><code>@override\ndef __or__(self, other: Mapping[str, AbstractSet[str]], /) -&gt; Self:  # pyright: ignore[reportIncompatibleMethodOverride]\n    result: Self = type(self)()\n    for typ in self.keys() | other.keys():\n        result[typ] = self.get(typ, set()) | other.get(typ, set())\n    return result\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RuleSet.add","title":"add","text":"<pre><code>add(typ: str, value: str) -&gt; None\n</code></pre> Source code in <code>src/route_rules/core/_ruleset.py</code> <pre><code>def add(self, typ: str, value: str) -&gt; None:\n    # IP-CIDR and IP-CIDR6 have the same effect, with IP-CIDR6 being an alias.\n    if typ == \"IP-CIDR6\":\n        typ = \"IP-CIDR\"\n    self[typ].add(value)\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RuleSet.optimize","title":"optimize","text":"<pre><code>optimize() -&gt; Self\n</code></pre> Source code in <code>src/route_rules/core/_ruleset.py</code> <pre><code>def optimize(self) -&gt; Self:\n    # TODO: implement\n    return self\n</code></pre>"},{"location":"reference/route_rules/#route_rules.RuleSet.union","title":"union","text":"<pre><code>union(*others: Mapping[str, Set[str]]) -&gt; Self\n</code></pre> Source code in <code>src/route_rules/core/_ruleset.py</code> <pre><code>def union(self, *others: Mapping[str, AbstractSet[str]]) -&gt; Self:\n    result: Self = type(self)()\n    for typ in set(self.keys()).union(*(m.keys() for m in others)):\n        result[typ] = self.get(typ, set()).union(\n            *(m.get(typ, set()) for m in others)\n        )\n    return result\n</code></pre>"},{"location":"reference/route_rules/#route_rules.download","title":"download  <code>async</code>","text":"<pre><code>download(url: str) -&gt; Response\n</code></pre> Source code in <code>src/route_rules/utils/_download.py</code> <pre><code>async def download(url: str) -&gt; httpx.Response:\n    response: httpx.Response = await client.get(url)\n    response = response.raise_for_status()\n    if response.extensions[\"from_cache\"]:\n        logger.success(\"Cache Hit: {}\", url)\n    else:\n        logger.info(\"Cache Miss: {}\", url)\n    return response\n</code></pre>"},{"location":"reference/route_rules/core/","title":"route_rules.core","text":""},{"location":"reference/route_rules/core/#route_rules.core","title":"route_rules.core","text":"<p>Classes:</p> <ul> <li> <code>RuleSet</code>           \u2013            <p>.</p> </li> </ul>"},{"location":"reference/route_rules/core/#route_rules.core.RuleSet","title":"RuleSet","text":"<p>               Bases: <code>UserDict[str, set[str]]</code></p> <p>.</p> References <ol> <li>https://wiki.metacubex.one/en/config/rules/</li> </ol> <p>Methods:</p> <ul> <li> <code>__missing__</code>             \u2013              </li> <li> <code>__or__</code>             \u2013              </li> <li> <code>add</code>             \u2013              </li> <li> <code>optimize</code>             \u2013              </li> <li> <code>union</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>domain</code>               (<code>set[str]</code>)           \u2013            </li> <li> <code>domain_suffix</code>               (<code>set[str]</code>)           \u2013            </li> <li> <code>ip_cidr</code>               (<code>set[str]</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/core/#route_rules.core.RuleSet.domain","title":"domain  <code>property</code>","text":"<pre><code>domain: set[str]\n</code></pre>"},{"location":"reference/route_rules/core/#route_rules.core.RuleSet.domain_suffix","title":"domain_suffix  <code>property</code>","text":"<pre><code>domain_suffix: set[str]\n</code></pre>"},{"location":"reference/route_rules/core/#route_rules.core.RuleSet.ip_cidr","title":"ip_cidr  <code>property</code>","text":"<pre><code>ip_cidr: set[str]\n</code></pre>"},{"location":"reference/route_rules/core/#route_rules.core.RuleSet.__missing__","title":"__missing__","text":"<pre><code>__missing__(key: str) -&gt; set[str]\n</code></pre> Source code in <code>src/route_rules/core/_ruleset.py</code> <pre><code>def __missing__(self, key: str) -&gt; set[str]:\n    self[key] = set()\n    return self[key]\n</code></pre>"},{"location":"reference/route_rules/core/#route_rules.core.RuleSet.__or__","title":"__or__","text":"<pre><code>__or__(other: Mapping[str, Set[str]]) -&gt; Self\n</code></pre> Source code in <code>src/route_rules/core/_ruleset.py</code> <pre><code>@override\ndef __or__(self, other: Mapping[str, AbstractSet[str]], /) -&gt; Self:  # pyright: ignore[reportIncompatibleMethodOverride]\n    result: Self = type(self)()\n    for typ in self.keys() | other.keys():\n        result[typ] = self.get(typ, set()) | other.get(typ, set())\n    return result\n</code></pre>"},{"location":"reference/route_rules/core/#route_rules.core.RuleSet.add","title":"add","text":"<pre><code>add(typ: str, value: str) -&gt; None\n</code></pre> Source code in <code>src/route_rules/core/_ruleset.py</code> <pre><code>def add(self, typ: str, value: str) -&gt; None:\n    # IP-CIDR and IP-CIDR6 have the same effect, with IP-CIDR6 being an alias.\n    if typ == \"IP-CIDR6\":\n        typ = \"IP-CIDR\"\n    self[typ].add(value)\n</code></pre>"},{"location":"reference/route_rules/core/#route_rules.core.RuleSet.optimize","title":"optimize","text":"<pre><code>optimize() -&gt; Self\n</code></pre> Source code in <code>src/route_rules/core/_ruleset.py</code> <pre><code>def optimize(self) -&gt; Self:\n    # TODO: implement\n    return self\n</code></pre>"},{"location":"reference/route_rules/core/#route_rules.core.RuleSet.union","title":"union","text":"<pre><code>union(*others: Mapping[str, Set[str]]) -&gt; Self\n</code></pre> Source code in <code>src/route_rules/core/_ruleset.py</code> <pre><code>def union(self, *others: Mapping[str, AbstractSet[str]]) -&gt; Self:\n    result: Self = type(self)()\n    for typ in set(self.keys()).union(*(m.keys() for m in others)):\n        result[typ] = self.get(typ, set()).union(\n            *(m.get(typ, set()) for m in others)\n        )\n    return result\n</code></pre>"},{"location":"reference/route_rules/export/","title":"route_rules.export","text":""},{"location":"reference/route_rules/export/#route_rules.export","title":"route_rules.export","text":"<p>Classes:</p> <ul> <li> <code>Exporter</code>           \u2013            </li> <li> <code>ExporterMihomo</code>           \u2013            </li> </ul>"},{"location":"reference/route_rules/export/#route_rules.export.Exporter","title":"Exporter","text":"<p>               Bases: <code>ABC</code></p> <p>Parameters:</p> <ul> <li> <code>export_path_template</code>               (<code>str</code>)           \u2013            </li> </ul> <p>Methods:</p> <ul> <li> <code>export</code>             \u2013              </li> <li> <code>export_path</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>export_path_template</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/export/#route_rules.export.Exporter.export_path_template","title":"export_path_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>export_path_template: str = field(kw_only=True)\n</code></pre>"},{"location":"reference/route_rules/export/#route_rules.export.Exporter.export","title":"export  <code>abstractmethod</code>","text":"<pre><code>export(file: str | PathLike[str], ruleset: RuleSet) -&gt; int\n</code></pre> Source code in <code>src/route_rules/export/_abc.py</code> <pre><code>@abc.abstractmethod\ndef export(self, file: str | os.PathLike[str], ruleset: RuleSet) -&gt; int:\n    raise NotImplementedError\n</code></pre>"},{"location":"reference/route_rules/export/#route_rules.export.Exporter.export_path","title":"export_path","text":"<pre><code>export_path(slug: str) -&gt; Path\n</code></pre> Source code in <code>src/route_rules/export/_abc.py</code> <pre><code>def export_path(self, slug: str) -&gt; Path:\n    return Path(self.export_path_template.format(slug=slug))\n</code></pre>"},{"location":"reference/route_rules/export/#route_rules.export.ExporterMihomo","title":"ExporterMihomo","text":"<p>               Bases: <code>Exporter</code></p> <p>Parameters:</p> <ul> <li> <code>behavior</code>               (<code>Behavior</code>)           \u2013            </li> <li> <code>format</code>               (<code>Format</code>)           \u2013            </li> <li> <code>export_path_template</code>               (<code>str</code>, default:                   <code>'mihomo/{slug}.{behavior}{format.ext}'</code> )           \u2013            </li> </ul> <p>Methods:</p> <ul> <li> <code>export</code>             \u2013              </li> <li> <code>export_path</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>behavior</code>               (<code>Behavior</code>)           \u2013            </li> <li> <code>export_path_template</code>               (<code>str</code>)           \u2013            </li> <li> <code>format</code>               (<code>Format</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/export/#route_rules.export.ExporterMihomo.behavior","title":"behavior  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>behavior: Behavior = field()\n</code></pre>"},{"location":"reference/route_rules/export/#route_rules.export.ExporterMihomo.export_path_template","title":"export_path_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>export_path_template: str = field(\n    default=\"mihomo/{slug}.{behavior}{format.ext}\",\n    kw_only=True,\n)\n</code></pre>"},{"location":"reference/route_rules/export/#route_rules.export.ExporterMihomo.format","title":"format  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>format: Format = field()\n</code></pre>"},{"location":"reference/route_rules/export/#route_rules.export.ExporterMihomo.export","title":"export","text":"<pre><code>export(file: str | PathLike[str], ruleset: RuleSet) -&gt; int\n</code></pre> Source code in <code>src/route_rules/export/_mihomo.py</code> <pre><code>@override\ndef export(\n    self,\n    file: str | os.PathLike[str],\n    ruleset: RuleSet,\n) -&gt; int:\n    data: bytes = encode(ruleset, behavior=self.behavior, format=self.format)\n    if not data:\n        return 0\n    file = Path(file)\n    file.parent.mkdir(parents=True, exist_ok=True)\n    file.write_bytes(data)\n    return len(data)\n</code></pre>"},{"location":"reference/route_rules/export/#route_rules.export.ExporterMihomo.export_path","title":"export_path","text":"<pre><code>export_path(slug: str) -&gt; Path\n</code></pre> Source code in <code>src/route_rules/export/_mihomo.py</code> <pre><code>@override\ndef export_path(self, slug: str) -&gt; Path:\n    return Path(\n        self.export_path_template.format(\n            slug=slug, behavior=self.behavior, format=self.format\n        )\n    )\n</code></pre>"},{"location":"reference/route_rules/gen/","title":"route_rules.gen","text":""},{"location":"reference/route_rules/gen/#route_rules.gen","title":"route_rules.gen","text":"<p>Classes:</p> <ul> <li> <code>ArtifactMeta</code>           \u2013            </li> <li> <code>Builder</code>           \u2013            </li> <li> <code>Config</code>           \u2013            </li> <li> <code>Meta</code>           \u2013            </li> <li> <code>ProviderMeta</code>           \u2013            </li> <li> <code>RecipeMeta</code>           \u2013            </li> <li> <code>RecipeWrapper</code>           \u2013            </li> </ul>"},{"location":"reference/route_rules/gen/#route_rules.gen.ArtifactMeta","title":"ArtifactMeta","text":"<p>               Bases: <code>Struct</code></p> <p>Parameters:</p> <ul> <li> <code>behavior</code>               (<code>Behavior</code>)           \u2013            </li> <li> <code>format</code>               (<code>Format</code>)           \u2013            </li> <li> <code>path</code>               (<code>Path</code>)           \u2013            </li> <li> <code>size</code>               (<code>int</code>)           \u2013            </li> </ul> <p>Attributes:</p> <ul> <li> <code>behavior</code>               (<code>Behavior</code>)           \u2013            </li> <li> <code>format</code>               (<code>Format</code>)           \u2013            </li> <li> <code>path</code>               (<code>Path</code>)           \u2013            </li> <li> <code>size</code>               (<code>int</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/gen/#route_rules.gen.ArtifactMeta.behavior","title":"behavior  <code>instance-attribute</code>","text":"<pre><code>behavior: Behavior\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.ArtifactMeta.format","title":"format  <code>instance-attribute</code>","text":"<pre><code>format: Format\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.ArtifactMeta.path","title":"path  <code>instance-attribute</code>","text":"<pre><code>path: Path\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.ArtifactMeta.size","title":"size  <code>instance-attribute</code>","text":"<pre><code>size: int\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.Builder","title":"Builder","text":"<p>Parameters:</p> <ul> <li> <code>dist_dir</code>               (<code>Path</code>, default:                   <code>PosixPath('dist')</code> )           \u2013            </li> <li> <code>exporters</code>               (<code>list[ExporterMihomo]</code>, default:                   <code>[ExporterMihomo(behavior=&lt;Behavior.DOMAIN: 'domain'&gt;, format=&lt;Format.MRS: 'mrs'&gt;, export_path_template='mihomo/{slug}.{behavior}{format.ext}'), ExporterMihomo(behavior=&lt;Behavior.DOMAIN: 'domain'&gt;, format=&lt;Format.TEXT: 'text'&gt;, export_path_template='mihomo/{slug}.{behavior}{format.ext}'), ExporterMihomo(behavior=&lt;Behavior.IPCIDR: 'ipcidr'&gt;, format=&lt;Format.MRS: 'mrs'&gt;, export_path_template='mihomo/{slug}.{behavior}{format.ext}'), ExporterMihomo(behavior=&lt;Behavior.IPCIDR: 'ipcidr'&gt;, format=&lt;Format.TEXT: 'text'&gt;, export_path_template='mihomo/{slug}.{behavior}{format.ext}'), ExporterMihomo(behavior=&lt;Behavior.CLASSICAL: 'classical'&gt;, format=&lt;Format.TEXT: 'text'&gt;, export_path_template='mihomo/{slug}.{behavior}{format.ext}')]</code> )           \u2013            </li> <li> <code>recipes</code>               (<code>list[RecipeWrapper]</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> </li> </ul> <p>Methods:</p> <ul> <li> <code>build</code>             \u2013              </li> <li> <code>build_recipe</code>             \u2013              </li> <li> <code>load</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>dist_dir</code>               (<code>Path</code>)           \u2013            </li> <li> <code>exporters</code>               (<code>list[ExporterMihomo]</code>)           \u2013            </li> <li> <code>recipes</code>               (<code>list[RecipeWrapper]</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/gen/#route_rules.gen.Builder.dist_dir","title":"dist_dir  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dist_dir: Path = field(default=Path('dist'))\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.Builder.exporters","title":"exporters  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exporters: list[ExporterMihomo] = field(\n    factory=_default_exporters\n)\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.Builder.recipes","title":"recipes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>recipes: list[RecipeWrapper] = field(factory=list)\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.Builder.build","title":"build  <code>async</code>","text":"<pre><code>build() -&gt; None\n</code></pre> Source code in <code>src/route_rules/gen/_builder.py</code> <pre><code>async def build(self) -&gt; None:\n    meta = Meta(build_time=datetime.datetime.now().astimezone())\n    for recipe in self.recipes:\n        meta.recipes.append(await self.build_recipe(recipe))\n    (self.dist_dir / \"meta.json\").write_bytes(meta.json_encode())\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.Builder.build_recipe","title":"build_recipe  <code>async</code>","text":"<pre><code>build_recipe(recipe: RecipeWrapper) -&gt; RecipeMeta\n</code></pre> Source code in <code>src/route_rules/gen/_builder.py</code> <pre><code>async def build_recipe(self, recipe: RecipeWrapper) -&gt; RecipeMeta:\n    ruleset: RuleSet = await recipe.build()\n    meta = RecipeMeta(\n        name=recipe.name,\n        slug=recipe.slug,\n        statistics=await self._build_statistics(recipe, ruleset),\n    )\n    for provider in recipe.providers:\n        meta.providers.append(\n            ProviderMeta(\n                name=provider,\n                download_url=recipe.registry.download_url(provider),\n                preview_url=recipe.registry.preview_url(provider),\n            )\n        )\n    for exporter in self.exporters:\n        path: Path = exporter.export_path(recipe.slug)\n        size: int = exporter.export(self.dist_dir / path, ruleset)\n        if size == 0:\n            continue\n        meta.artifacts.append(\n            ArtifactMeta(\n                behavior=exporter.behavior,\n                format=exporter.format,\n                path=path,\n                size=size,\n            )\n        )\n    return meta\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.Builder.load","title":"load  <code>classmethod</code>","text":"<pre><code>load(file: str | PathLike[str]) -&gt; Self\n</code></pre> Source code in <code>src/route_rules/gen/_builder.py</code> <pre><code>@classmethod\ndef load(cls, file: str | os.PathLike[str]) -&gt; Self:\n    config: Config = Config.load(file)\n    self: Self = cls()\n    for recipe_config in config.recipes:\n        self.recipes.append(RecipeWrapper.from_config(recipe_config))\n    return self\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.Config","title":"Config  <code>pydantic-model</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Parameters:</p> <ul> <li> <code>recipes</code>               (<code>list[RecipeConfig]</code>)           \u2013            </li> </ul> Show JSON schema: <pre><code>{\n  \"$defs\": {\n    \"RecipeConfig\": {\n      \"properties\": {\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"providers\": {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"title\": \"Providers\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"providers\"\n      ],\n      \"title\": \"RecipeConfig\",\n      \"type\": \"object\"\n    }\n  },\n  \"properties\": {\n    \"recipes\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/RecipeConfig\"\n      },\n      \"title\": \"Recipes\",\n      \"type\": \"array\"\n    }\n  },\n  \"required\": [\n    \"recipes\"\n  ],\n  \"title\": \"Config\",\n  \"type\": \"object\"\n}\n</code></pre> <p>Fields:</p> <ul> <li> <code>recipes</code>                 (<code>list[RecipeConfig]</code>)             </li> </ul>"},{"location":"reference/route_rules/gen/#route_rules.gen.Config.recipes","title":"recipes  <code>pydantic-field</code>","text":"<pre><code>recipes: list[RecipeConfig]\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.Config.load","title":"load  <code>classmethod</code>","text":"<pre><code>load(file: str | PathLike[str]) -&gt; Self\n</code></pre> Source code in <code>src/route_rules/gen/_config.py</code> <pre><code>@classmethod\ndef load(cls, file: str | os.PathLike[str]) -&gt; Self:\n    file = Path(file)\n    data: Any = msgspec.yaml.decode(file.read_bytes())\n    return cls.model_validate(data)\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.Meta","title":"Meta","text":"<p>               Bases: <code>Struct</code></p> <p>Parameters:</p> <ul> <li> <code>build_time</code>               (<code>datetime</code>)           \u2013            </li> <li> <code>recipes</code>               (<code>list[RecipeMeta]</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> </li> </ul> <p>Methods:</p> <ul> <li> <code>json_decode</code>             \u2013              </li> <li> <code>json_encode</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>build_time</code>               (<code>datetime</code>)           \u2013            </li> <li> <code>recipes</code>               (<code>list[RecipeMeta]</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/gen/#route_rules.gen.Meta.build_time","title":"build_time  <code>instance-attribute</code>","text":"<pre><code>build_time: datetime\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.Meta.recipes","title":"recipes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>recipes: list[RecipeMeta] = field(default_factory=list)\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.Meta.json_decode","title":"json_decode  <code>classmethod</code>","text":"<pre><code>json_decode(data: Buffer | str) -&gt; Self\n</code></pre> Source code in <code>src/route_rules/gen/_meta.py</code> <pre><code>@classmethod\ndef json_decode(cls, data: Buffer | str) -&gt; Self:\n    return msgspec.json.decode(data, type=cls, dec_hook=dec_hook)\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.Meta.json_encode","title":"json_encode","text":"<pre><code>json_encode() -&gt; bytes\n</code></pre> Source code in <code>src/route_rules/gen/_meta.py</code> <pre><code>def json_encode(self) -&gt; bytes:\n    return msgspec.json.encode(self, enc_hook=enc_hook)\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.ProviderMeta","title":"ProviderMeta","text":"<p>               Bases: <code>Struct</code></p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>download_url</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url</code>               (<code>str</code>)           \u2013            </li> </ul> <p>Attributes:</p> <ul> <li> <code>download_url</code>               (<code>str</code>)           \u2013            </li> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/gen/#route_rules.gen.ProviderMeta.download_url","title":"download_url  <code>instance-attribute</code>","text":"<pre><code>download_url: str\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.ProviderMeta.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.ProviderMeta.preview_url","title":"preview_url  <code>instance-attribute</code>","text":"<pre><code>preview_url: str\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.RecipeMeta","title":"RecipeMeta","text":"<p>               Bases: <code>Struct</code></p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>slug</code>               (<code>str</code>)           \u2013            </li> <li> <code>artifacts</code>               (<code>list[ArtifactMeta]</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> </li> <li> <code>providers</code>               (<code>list[ProviderMeta]</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> </li> <li> <code>statistics</code>               (<code>RecipeStatistics</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            </li> </ul> <p>Attributes:</p> <ul> <li> <code>artifacts</code>               (<code>list[ArtifactMeta]</code>)           \u2013            </li> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>providers</code>               (<code>list[ProviderMeta]</code>)           \u2013            </li> <li> <code>slug</code>               (<code>str</code>)           \u2013            </li> <li> <code>statistics</code>               (<code>RecipeStatistics</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/gen/#route_rules.gen.RecipeMeta.artifacts","title":"artifacts  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>artifacts: list[ArtifactMeta] = field(default_factory=list)\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.RecipeMeta.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.RecipeMeta.providers","title":"providers  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>providers: list[ProviderMeta] = field(default_factory=list)\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.RecipeMeta.slug","title":"slug  <code>instance-attribute</code>","text":"<pre><code>slug: str\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.RecipeMeta.statistics","title":"statistics  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>statistics: RecipeStatistics = field(\n    default_factory=RecipeStatistics\n)\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.RecipeWrapper","title":"RecipeWrapper","text":"<p>               Bases: <code>Recipe</code></p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>providers</code>               (<code>list[str]</code>)           \u2013            </li> <li> <code>registry</code>               (<code>ProviderRegistry</code>, default:                   <code>ProviderRegistry(registry={'blackmatrix7': ProviderMihomo(name='blackmatrix7', download_url_template='https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/{name}/{name}.list', preview_url_template='https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/Clash/{name}', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.CLASSICAL: 'classical'&gt;, format=&lt;Format.TEXT: 'text'&gt;), 'dler-io': ProviderMihomo(name='dler-io', download_url_template='https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/{name}.yaml', preview_url_template='https://github.com/dler-io/Rules/blob/main/Clash/Provider/{name}.yaml', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.CLASSICAL: 'classical'&gt;, format=&lt;Format.YAML: 'yaml'&gt;), 'liblaf': ProviderMihomo(name='liblaf', download_url_template='https://raw.githubusercontent.com/liblaf/route-rules/main/rules/{name}.list', preview_url_template='https://github.com/liblaf/route-rules/blob/main/rules/{name}.list', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.DOMAIN: 'domain'&gt;, format=&lt;Format.TEXT: 'text'&gt;), 'MetaCubeX/geosite': ProviderMihomo(name='MetaCubeX/geosite', download_url_template='https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/{name}.yaml', preview_url_template='https://github.com/MetaCubeX/meta-rules-dat/blob/meta/geo/geosite/{name}.yaml', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.DOMAIN: 'domain'&gt;, format=&lt;Format.YAML: 'yaml'&gt;), 'SukkaW/classical': ProviderMihomo(name='SukkaW/classical', download_url_template='https://ruleset.skk.moe/Clash/{name}.txt', preview_url_template='https://ruleset.skk.moe/Clash/{name}.txt', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.CLASSICAL: 'classical'&gt;, format=&lt;Format.TEXT: 'text'&gt;), 'SukkaW/domain': ProviderMihomo(name='SukkaW/domain', download_url_template='https://ruleset.skk.moe/Clash/{name}.txt', preview_url_template='https://ruleset.skk.moe/Clash/{name}.txt', _cache=LRUCache({}, maxsize=65536, currsize=0), behavior=&lt;Behavior.DOMAIN: 'domain'&gt;, format=&lt;Format.TEXT: 'text'&gt;)})</code> )           \u2013            </li> <li> <code>slug</code>               (<code>str</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            </li> </ul> <p>Methods:</p> <ul> <li> <code>build</code>             \u2013              </li> <li> <code>from_config</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>providers</code>               (<code>list[str]</code>)           \u2013            </li> <li> <code>registry</code>               (<code>ProviderRegistry</code>)           \u2013            </li> <li> <code>slug</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/gen/#route_rules.gen.RecipeWrapper.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = field()\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.RecipeWrapper.providers","title":"providers  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>providers: list[str] = field()\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.RecipeWrapper.registry","title":"registry  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>registry: ProviderRegistry = field(\n    factory=presets, kw_only=True\n)\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.RecipeWrapper.slug","title":"slug  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>slug: str = field(\n    default=Factory(default_slug, takes_self=True),\n    kw_only=True,\n)\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.RecipeWrapper.build","title":"build  <code>async</code>","text":"<pre><code>build() -&gt; RuleSet\n</code></pre> Source code in <code>src/route_rules/_recipe.py</code> <pre><code>@cta.cachedmethod(lambda self: self._cache)\nasync def build(self) -&gt; RuleSet:\n    ruleset: RuleSet = RuleSet.union(\n        *(await asyncio.gather(*(self.registry.load(p) for p in self.providers)))\n    )\n    ruleset = ruleset.optimize()\n    return ruleset\n</code></pre>"},{"location":"reference/route_rules/gen/#route_rules.gen.RecipeWrapper.from_config","title":"from_config  <code>classmethod</code>","text":"<pre><code>from_config(config: RecipeConfig) -&gt; Self\n</code></pre> Source code in <code>src/route_rules/gen/_recipe.py</code> <pre><code>@classmethod\ndef from_config(cls, config: RecipeConfig) -&gt; Self:\n    return cls(name=config.name, providers=config.providers)\n</code></pre>"},{"location":"reference/route_rules/provider/","title":"route_rules.provider","text":""},{"location":"reference/route_rules/provider/#route_rules.provider","title":"route_rules.provider","text":"<p>Modules:</p> <ul> <li> <code>mihomo</code>           \u2013            </li> </ul> <p>Classes:</p> <ul> <li> <code>Behavior</code>           \u2013            </li> <li> <code>Format</code>           \u2013            </li> <li> <code>Provider</code>           \u2013            </li> <li> <code>ProviderMihomo</code>           \u2013            </li> <li> <code>ProviderRegistry</code>           \u2013            </li> </ul>"},{"location":"reference/route_rules/provider/#route_rules.provider.Behavior","title":"Behavior","text":"<p>               Bases: <code>StrEnum</code></p> <p>Attributes:</p> <ul> <li> <code>CLASSICAL</code>           \u2013            </li> <li> <code>DOMAIN</code>           \u2013            </li> <li> <code>IPCIDR</code>           \u2013            </li> </ul>"},{"location":"reference/route_rules/provider/#route_rules.provider.Behavior.CLASSICAL","title":"CLASSICAL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CLASSICAL = auto()\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.Behavior.DOMAIN","title":"DOMAIN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DOMAIN = auto()\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.Behavior.IPCIDR","title":"IPCIDR  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>IPCIDR = auto()\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.Format","title":"Format","text":"<p>               Bases: <code>StrEnum</code></p> <p>Attributes:</p> <ul> <li> <code>MRS</code>           \u2013            </li> <li> <code>TEXT</code>           \u2013            </li> <li> <code>YAML</code>           \u2013            </li> <li> <code>ext</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/provider/#route_rules.provider.Format.MRS","title":"MRS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MRS = auto()\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.Format.TEXT","title":"TEXT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TEXT = auto()\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.Format.YAML","title":"YAML  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>YAML = auto()\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.Format.ext","title":"ext  <code>property</code>","text":"<pre><code>ext: str\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.Provider","title":"Provider","text":"<p>               Bases: <code>ABC</code></p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>download_url_template</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url_template</code>               (<code>str</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            </li> </ul> <p>Methods:</p> <ul> <li> <code>download_url</code>             \u2013              </li> <li> <code>load</code>             \u2013              </li> <li> <code>preview_url</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>download_url_template</code>               (<code>str</code>)           \u2013            </li> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url_template</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/provider/#route_rules.provider.Provider.download_url_template","title":"download_url_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>download_url_template: str = field()\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.Provider.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = field()\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.Provider.preview_url_template","title":"preview_url_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>preview_url_template: str = field(\n    default=Factory(\n        _default_preview_url_template, takes_self=True\n    )\n)\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.Provider.download_url","title":"download_url","text":"<pre><code>download_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_abc.py</code> <pre><code>def download_url(self, name: str) -&gt; str:\n    name = urllib.parse.quote(name)\n    return self.download_url_template.format(name=name)\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.Provider.load","title":"load  <code>abstractmethod</code> <code>async</code>","text":"<pre><code>load(name: str) -&gt; RuleSet\n</code></pre> Source code in <code>src/route_rules/provider/_abc.py</code> <pre><code>@abc.abstractmethod\nasync def load(self, name: str) -&gt; RuleSet:\n    raise NotImplementedError\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.Provider.preview_url","title":"preview_url","text":"<pre><code>preview_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_abc.py</code> <pre><code>def preview_url(self, name: str) -&gt; str:\n    name = urllib.parse.quote(name)\n    return self.preview_url_template.format(name=name)\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderMihomo","title":"ProviderMihomo","text":"<p>               Bases: <code>Provider</code></p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>download_url_template</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url_template</code>               (<code>str</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            </li> <li> <code>behavior</code>               (<code>Behavior</code>)           \u2013            </li> <li> <code>format</code>               (<code>Format</code>, default:                   <code>&lt;Format.YAML: 'yaml'&gt;</code> )           \u2013            </li> </ul> <p>Methods:</p> <ul> <li> <code>download_url</code>             \u2013              </li> <li> <code>load</code>             \u2013              </li> <li> <code>preview_url</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>behavior</code>               (<code>Behavior</code>)           \u2013            </li> <li> <code>download_url_template</code>               (<code>str</code>)           \u2013            </li> <li> <code>format</code>               (<code>Format</code>)           \u2013            </li> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url_template</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderMihomo.behavior","title":"behavior  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>behavior: Behavior = field(kw_only=True)\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderMihomo.download_url_template","title":"download_url_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>download_url_template: str = field()\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderMihomo.format","title":"format  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>format: Format = field(default=YAML, kw_only=True)\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderMihomo.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = field()\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderMihomo.preview_url_template","title":"preview_url_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>preview_url_template: str = field(\n    default=Factory(\n        _default_preview_url_template, takes_self=True\n    )\n)\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderMihomo.download_url","title":"download_url","text":"<pre><code>download_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_abc.py</code> <pre><code>def download_url(self, name: str) -&gt; str:\n    name = urllib.parse.quote(name)\n    return self.download_url_template.format(name=name)\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderMihomo.load","title":"load  <code>async</code>","text":"<pre><code>load(name: str) -&gt; RuleSet\n</code></pre> Source code in <code>src/route_rules/provider/mihomo/_provider.py</code> <pre><code>@override\n@cta.cachedmethod(lambda self: self._cache)\nasync def load(self, name: str) -&gt; RuleSet:\n    response: httpx.Response = await utils.download(self.download_url(name))\n    return decode(response.text, behavior=self.behavior, format=self.format)\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderMihomo.preview_url","title":"preview_url","text":"<pre><code>preview_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_abc.py</code> <pre><code>def preview_url(self, name: str) -&gt; str:\n    name = urllib.parse.quote(name)\n    return self.preview_url_template.format(name=name)\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderRegistry","title":"ProviderRegistry","text":"<p>Parameters:</p> <ul> <li> <code>registry</code>               (<code>dict[str, Provider]</code>, default:                   <code>&lt;class 'dict'&gt;</code> )           \u2013            <p>dict() -&gt; new empty dictionary dict(mapping) -&gt; new dictionary initialized from a mapping object\u2019s     (key, value) pairs dict(iterable) -&gt; new dictionary initialized as if via:     d = {}     for k, v in iterable:         d[k] = v dict(**kwargs) -&gt; new dictionary initialized with the name=value pairs     in the keyword argument list.  For example:  dict(one=1, two=2)</p> </li> </ul> <p>Methods:</p> <ul> <li> <code>download_url</code>             \u2013              </li> <li> <code>load</code>             \u2013              </li> <li> <code>presets</code>             \u2013              </li> <li> <code>preview_url</code>             \u2013              </li> <li> <code>register</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>registry</code>               (<code>dict[str, Provider]</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderRegistry.registry","title":"registry  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>registry: dict[str, Provider] = field(factory=dict)\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderRegistry.download_url","title":"download_url","text":"<pre><code>download_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_registry.py</code> <pre><code>def download_url(self, name: str) -&gt; str:\n    provider: Provider\n    ruleset_name: str\n    provider, ruleset_name = self._parse_name(name)\n    return provider.download_url(ruleset_name)\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderRegistry.load","title":"load  <code>async</code>","text":"<pre><code>load(name: str) -&gt; RuleSet\n</code></pre> Source code in <code>src/route_rules/provider/_registry.py</code> <pre><code>async def load(self, name: str) -&gt; RuleSet:\n    provider: Provider\n    ruleset_name: str\n    provider, ruleset_name = self._parse_name(name)\n    return await provider.load(ruleset_name)\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderRegistry.presets","title":"presets  <code>cached</code> <code>classmethod</code>","text":"<pre><code>presets() -&gt; Self\n</code></pre> Source code in <code>src/route_rules/provider/_registry.py</code> <pre><code>@classmethod\n@functools.cache\ndef presets(cls) -&gt; Self:\n    self: Self = cls()\n    self.register(\n        ProviderMihomo(\n            \"blackmatrix7\",\n            \"https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/{name}/{name}.list\",\n            \"https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/Clash/{name}\",\n            behavior=Behavior.CLASSICAL,\n            format=Format.TEXT,\n        ),\n        ProviderMihomo(\n            \"dler-io\",\n            \"https://raw.githubusercontent.com/dler-io/Rules/main/Clash/Provider/{name}.yaml\",\n            \"https://github.com/dler-io/Rules/blob/main/Clash/Provider/{name}.yaml\",\n            behavior=Behavior.CLASSICAL,\n            format=Format.YAML,\n        ),\n        ProviderMihomo(\n            \"liblaf\",\n            \"https://raw.githubusercontent.com/liblaf/route-rules/main/rules/{name}.list\",\n            \"https://github.com/liblaf/route-rules/blob/main/rules/{name}.list\",\n            behavior=Behavior.DOMAIN,\n            format=Format.TEXT,\n        ),\n        ProviderMihomo(\n            \"MetaCubeX/geosite\",\n            \"https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/{name}.yaml\",\n            \"https://github.com/MetaCubeX/meta-rules-dat/blob/meta/geo/geosite/{name}.yaml\",\n            behavior=Behavior.DOMAIN,\n            format=Format.YAML,\n        ),\n        ProviderMihomo(\n            \"SukkaW/classical\",\n            \"https://ruleset.skk.moe/Clash/{name}.txt\",\n            behavior=Behavior.CLASSICAL,\n            format=Format.TEXT,\n        ),\n        ProviderMihomo(\n            \"SukkaW/domain\",\n            \"https://ruleset.skk.moe/Clash/{name}.txt\",\n            behavior=Behavior.DOMAIN,\n            format=Format.TEXT,\n        ),\n    )\n    return self\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderRegistry.preview_url","title":"preview_url","text":"<pre><code>preview_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_registry.py</code> <pre><code>def preview_url(self, name: str) -&gt; str:\n    provider: Provider\n    ruleset_name: str\n    provider, ruleset_name = self._parse_name(name)\n    return provider.preview_url(ruleset_name)\n</code></pre>"},{"location":"reference/route_rules/provider/#route_rules.provider.ProviderRegistry.register","title":"register","text":"<pre><code>register(*providers: Provider) -&gt; None\n</code></pre> Source code in <code>src/route_rules/provider/_registry.py</code> <pre><code>def register(self, *providers: Provider) -&gt; None:\n    for provider in providers:\n        self.registry[provider.name] = provider\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/","title":"route_rules.provider.mihomo","text":""},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo","title":"route_rules.provider.mihomo","text":"<p>Classes:</p> <ul> <li> <code>Behavior</code>           \u2013            </li> <li> <code>Format</code>           \u2013            </li> <li> <code>ProviderMihomo</code>           \u2013            </li> </ul> <p>Functions:</p> <ul> <li> <code>decode</code>             \u2013              </li> </ul>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.Behavior","title":"Behavior","text":"<p>               Bases: <code>StrEnum</code></p> <p>Attributes:</p> <ul> <li> <code>CLASSICAL</code>           \u2013            </li> <li> <code>DOMAIN</code>           \u2013            </li> <li> <code>IPCIDR</code>           \u2013            </li> </ul>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.Behavior.CLASSICAL","title":"CLASSICAL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CLASSICAL = auto()\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.Behavior.DOMAIN","title":"DOMAIN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DOMAIN = auto()\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.Behavior.IPCIDR","title":"IPCIDR  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>IPCIDR = auto()\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.Format","title":"Format","text":"<p>               Bases: <code>StrEnum</code></p> <p>Attributes:</p> <ul> <li> <code>MRS</code>           \u2013            </li> <li> <code>TEXT</code>           \u2013            </li> <li> <code>YAML</code>           \u2013            </li> <li> <code>ext</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.Format.MRS","title":"MRS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MRS = auto()\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.Format.TEXT","title":"TEXT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TEXT = auto()\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.Format.YAML","title":"YAML  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>YAML = auto()\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.Format.ext","title":"ext  <code>property</code>","text":"<pre><code>ext: str\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.ProviderMihomo","title":"ProviderMihomo","text":"<p>               Bases: <code>Provider</code></p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>download_url_template</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url_template</code>               (<code>str</code>, default:                   <code>&lt;dynamic&gt;</code> )           \u2013            </li> <li> <code>behavior</code>               (<code>Behavior</code>)           \u2013            </li> <li> <code>format</code>               (<code>Format</code>, default:                   <code>&lt;Format.YAML: 'yaml'&gt;</code> )           \u2013            </li> </ul> <p>Methods:</p> <ul> <li> <code>download_url</code>             \u2013              </li> <li> <code>load</code>             \u2013              </li> <li> <code>preview_url</code>             \u2013              </li> </ul> <p>Attributes:</p> <ul> <li> <code>behavior</code>               (<code>Behavior</code>)           \u2013            </li> <li> <code>download_url_template</code>               (<code>str</code>)           \u2013            </li> <li> <code>format</code>               (<code>Format</code>)           \u2013            </li> <li> <code>name</code>               (<code>str</code>)           \u2013            </li> <li> <code>preview_url_template</code>               (<code>str</code>)           \u2013            </li> </ul>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.ProviderMihomo.behavior","title":"behavior  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>behavior: Behavior = field(kw_only=True)\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.ProviderMihomo.download_url_template","title":"download_url_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>download_url_template: str = field()\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.ProviderMihomo.format","title":"format  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>format: Format = field(default=YAML, kw_only=True)\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.ProviderMihomo.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = field()\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.ProviderMihomo.preview_url_template","title":"preview_url_template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>preview_url_template: str = field(\n    default=Factory(\n        _default_preview_url_template, takes_self=True\n    )\n)\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.ProviderMihomo.download_url","title":"download_url","text":"<pre><code>download_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_abc.py</code> <pre><code>def download_url(self, name: str) -&gt; str:\n    name = urllib.parse.quote(name)\n    return self.download_url_template.format(name=name)\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.ProviderMihomo.load","title":"load  <code>async</code>","text":"<pre><code>load(name: str) -&gt; RuleSet\n</code></pre> Source code in <code>src/route_rules/provider/mihomo/_provider.py</code> <pre><code>@override\n@cta.cachedmethod(lambda self: self._cache)\nasync def load(self, name: str) -&gt; RuleSet:\n    response: httpx.Response = await utils.download(self.download_url(name))\n    return decode(response.text, behavior=self.behavior, format=self.format)\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.ProviderMihomo.preview_url","title":"preview_url","text":"<pre><code>preview_url(name: str) -&gt; str\n</code></pre> Source code in <code>src/route_rules/provider/_abc.py</code> <pre><code>def preview_url(self, name: str) -&gt; str:\n    name = urllib.parse.quote(name)\n    return self.preview_url_template.format(name=name)\n</code></pre>"},{"location":"reference/route_rules/provider/mihomo/#route_rules.provider.mihomo.decode","title":"decode","text":"<pre><code>decode(\n    data: str | bytes, behavior: Behavior, format: Format\n) -&gt; RuleSet\n</code></pre> Source code in <code>src/route_rules/provider/mihomo/_decode.py</code> <pre><code>def decode(data: str | bytes, behavior: Behavior, format: Format) -&gt; RuleSet:  # noqa: A002\n    payload: list[str]\n    match format:\n        case Format.YAML:\n            payload = _decode_yaml(data)\n        case Format.TEXT:\n            payload = _decode_text(data)\n        case _:\n            raise DecodeError(behavior=behavior, format=format)\n    match behavior:\n        case Behavior.DOMAIN:\n            return _decode_domain(payload)\n        case Behavior.CLASSICAL:\n            return _decode_classical(payload)\n        case _:\n            raise DecodeError(behavior=behavior, format=format)\n</code></pre>"},{"location":"reference/route_rules/utils/","title":"route_rules.utils","text":""},{"location":"reference/route_rules/utils/#route_rules.utils","title":"route_rules.utils","text":"<p>Functions:</p> <ul> <li> <code>default_slug</code>             \u2013              </li> <li> <code>download</code>             \u2013              </li> </ul>"},{"location":"reference/route_rules/utils/#route_rules.utils.default_slug","title":"default_slug","text":"<pre><code>default_slug(self: Any) -&gt; str\n</code></pre> Source code in <code>src/route_rules/utils/_slugify.py</code> <pre><code>def default_slug(self: Any) -&gt; str:\n    return slugify(self.name)\n</code></pre>"},{"location":"reference/route_rules/utils/#route_rules.utils.download","title":"download  <code>async</code>","text":"<pre><code>download(url: str) -&gt; Response\n</code></pre> Source code in <code>src/route_rules/utils/_download.py</code> <pre><code>async def download(url: str) -&gt; httpx.Response:\n    response: httpx.Response = await client.get(url)\n    response = response.raise_for_status()\n    if response.extensions[\"from_cache\"]:\n        logger.success(\"Cache Hit: {}\", url)\n    else:\n        logger.info(\"Cache Miss: {}\", url)\n    return response\n</code></pre>"},{"location":"rulesets/ai/","title":"\ud83e\udd16 AI","text":"<p>Last Updated At: 2025-10-30T01:11:27+00:00</p>"},{"location":"rulesets/ai/#links","title":"Links","text":"Name GitHub jsDeliver ai.domain.mrs Link Link ai.domain.list Link Link ai.classical.list Link Link"},{"location":"rulesets/ai/#statistics","title":"Statistics","text":"Type I O DOMAIN 35 24 DOMAIN-KEYWORD 3 2 DOMAIN-SUFFIX 150 87 Total 188 113"},{"location":"rulesets/ai/#sources","title":"Sources","text":"Name Preview Download dler-io:AI Suite Preview Download MetaCubeX/geosite:category-ai-!cn Preview Download SukkaW/classical:non_ip/ai Preview Download"},{"location":"rulesets/direct/","title":"\ud83c\udfaf Direct","text":"<p>Last Updated At: 2025-10-30T01:11:27+00:00</p>"},{"location":"rulesets/direct/#links","title":"Links","text":"Name GitHub jsDeliver direct.domain.mrs Link Link direct.domain.list Link Link direct.classical.list Link Link"},{"location":"rulesets/direct/#statistics","title":"Statistics","text":"Type I O DOMAIN 108 108 DOMAIN-KEYWORD 48 39 DOMAIN-SUFFIX 339 206 PROCESS-NAME 97 51 Total 592 404"},{"location":"rulesets/direct/#sources","title":"Sources","text":"Name Preview Download blackmatrix7:Direct Preview Download dler-io:Special Preview Download liblaf:direct Preview Download SukkaW/classical:non_ip/direct Preview Download"},{"location":"rulesets/domestic/","title":"\ud83d\udccd Domestic","text":"<p>Last Updated At: 2025-10-30T01:11:27+00:00</p>"},{"location":"rulesets/domestic/#links","title":"Links","text":"Name GitHub jsDeliver domestic.domain.mrs Link Link domestic.domain.list Link Link domestic.ipcidr.mrs Link Link domestic.ipcidr.list Link Link domestic.classical.list Link Link"},{"location":"rulesets/domestic/#statistics","title":"Statistics","text":"Type I O DOMAIN 347 340 DOMAIN-KEYWORD 14 13 DOMAIN-SUFFIX 241332 118638 DOMAIN-WILDCARD 1 1 IP-ASN 1 1 IP-CIDR 28178 23756 PROCESS-NAME 14 14 Total 269887 142763"},{"location":"rulesets/domestic/#sources","title":"Sources","text":"Name Preview Download blackmatrix7:ChinaMax Preview Download dler-io:Domestic Preview Download dler-io:Domestic IPs Preview Download MetaCubeX/geosite:cn Preview Download MetaCubeX/geosite:geolocation-cn Preview Download SukkaW/classical:ip/domestic Preview Download SukkaW/classical:non_ip/domestic Preview Download"},{"location":"rulesets/download/","title":"\ud83d\udce5 Download","text":"<p>Last Updated At: 2025-10-30T01:11:27+00:00</p>"},{"location":"rulesets/download/#links","title":"Links","text":"Name GitHub jsDeliver download.domain.mrs Link Link download.domain.list Link Link download.classical.list Link Link"},{"location":"rulesets/download/#statistics","title":"Statistics","text":"Type I O DOMAIN 3620 3616 DOMAIN-KEYWORD 21 21 DOMAIN-SUFFIX 1573 1571 DOMAIN-WILDCARD 60 60 Total 5274 5268"},{"location":"rulesets/download/#sources","title":"Sources","text":"Name Preview Download SukkaW/classical:non_ip/cdn Preview Download SukkaW/classical:non_ip/download Preview Download SukkaW/domain:domainset/cdn Preview Download SukkaW/domain:domainset/download Preview Download"},{"location":"rulesets/global/","title":"\ud83c\udf10 Global","text":"<p>Last Updated At: 2025-10-30T01:11:27+00:00</p>"},{"location":"rulesets/global/#links","title":"Links","text":"Name GitHub jsDeliver global.domain.mrs Link Link global.domain.list Link Link global.ipcidr.mrs Link Link global.ipcidr.list Link Link global.classical.list Link Link"},{"location":"rulesets/global/#statistics","title":"Statistics","text":"Type I O DOMAIN 727 622 DOMAIN-KEYWORD 57 40 DOMAIN-SUFFIX 64679 33126 IP-CIDR 176 125 PROCESS-NAME 1 1 Total 65640 33914"},{"location":"rulesets/global/#sources","title":"Sources","text":"Name Preview Download blackmatrix7:Global Preview Download dler-io:Proxy Preview Download MetaCubeX/geosite:geolocation-!cn Preview Download SukkaW/classical:non_ip/global Preview Download"},{"location":"rulesets/local/","title":"\u267e\ufe0f Local","text":"<p>Last Updated At: 2025-10-30T01:11:27+00:00</p>"},{"location":"rulesets/local/#links","title":"Links","text":"Name GitHub jsDeliver local.domain.mrs Link Link local.domain.list Link Link local.ipcidr.mrs Link Link local.ipcidr.list Link Link"},{"location":"rulesets/local/#statistics","title":"Statistics","text":"Type I O DOMAIN 30 20 DOMAIN-SUFFIX 278 137 IP-CIDR 36 21 Total 344 178"},{"location":"rulesets/local/#sources","title":"Sources","text":"Name Preview Download blackmatrix7:Lan Preview Download dler-io:LAN Preview Download MetaCubeX/geosite:private Preview Download SukkaW/classical:ip/lan Preview Download SukkaW/classical:non_ip/lan Preview Download"},{"location":"rulesets/stream/","title":"\ud83d\udcfa Stream","text":"<p>Last Updated At: 2025-10-30T01:11:27+00:00</p>"},{"location":"rulesets/stream/#links","title":"Links","text":"Name GitHub jsDeliver stream.domain.mrs Link Link stream.domain.list Link Link stream.ipcidr.mrs Link Link stream.ipcidr.list Link Link stream.classical.list Link Link"},{"location":"rulesets/stream/#statistics","title":"Statistics","text":"Type I O DOMAIN 91 83 DOMAIN-KEYWORD 40 28 DOMAIN-SUFFIX 1469 1287 IP-CIDR 943 925 PROCESS-NAME 17 14 Total 2560 2337"},{"location":"rulesets/stream/#sources","title":"Sources","text":"Name Preview Download blackmatrix7:GlobalMedia Preview Download SukkaW/classical:ip/stream Preview Download SukkaW/classical:non_ip/stream Preview Download"},{"location":"rulesets/telegram/","title":"\u2708\ufe0f Telegram","text":"<p>Last Updated At: 2025-10-30T01:11:27+00:00</p>"},{"location":"rulesets/telegram/#links","title":"Links","text":"Name GitHub jsDeliver telegram.domain.mrs Link Link telegram.domain.list Link Link telegram.ipcidr.mrs Link Link telegram.ipcidr.list Link Link"},{"location":"rulesets/telegram/#statistics","title":"Statistics","text":"Type I O DOMAIN 2 1 DOMAIN-SUFFIX 14 14 IP-CIDR 17 17 Total 33 32"},{"location":"rulesets/telegram/#sources","title":"Sources","text":"Name Preview Download SukkaW/classical:ip/telegram Preview Download SukkaW/classical:non_ip/telegram Preview Download"},{"location":"usage/sing-box/","title":"Example sing-box Config","text":""},{"location":"usage/sing-box/#dns","title":"DNS","text":"CommonFakeIP, iOS <pre><code>{\n  \"$schema\": \"https://gist.github.com/artiga033/fea992d95ad44dc8d024b229223b1002/raw/83c676c1ec9f37af2bce0505da396b5444b30032/sing-box.schema.json\",\n  \"dns\": {\n    \"servers\": [\n      { \"tag\": \"dns:proxy\", \"address\": \"https://8.8.8.8/dns-query\" },\n      { \"tag\": \"dns:local\", \"address\": \"local\", \"detour\": \"DIRECT\" },\n      { \"tag\": \"dns:reject\", \"address\": \"rcode://refused\" }\n    ],\n    \"rules\": [\n      { \"outbound\": \"any\", \"server\": \"dns:local\" },\n      {\n        \"rule_set\": \"geosite:ads\",\n        \"server\": \"dns:reject\",\n        \"disable_cache\": true\n      },\n      { \"rule_set\": \"geosite:private\", \"server\": \"dns:local\" },\n      { \"clash_mode\": \"direct\", \"server\": \"dns:local\" },\n      { \"clash_mode\": \"global\", \"server\": \"dns:proxy\" },\n      { \"rule_set\": \"geosite:cn\", \"server\": \"dns:local\" },\n      {\n        \"type\": \"logical\",\n        \"mode\": \"and\",\n        \"rules\": [\n          { \"rule_set\": \"geosite:proxy\", \"invert\": true },\n          { \"rule_set\": \"geoip:cn\" }\n        ],\n        \"server\": \"dns:proxy\",\n        \"client_subnet\": \"101.6.6.6\"\n      }\n    ],\n    \"final\": \"dns:proxy\",\n    \"independent_cache\": true\n  }\n}\n</code></pre> <pre><code>{\n  \"$schema\": \"https://gist.github.com/artiga033/fea992d95ad44dc8d024b229223b1002/raw/83c676c1ec9f37af2bce0505da396b5444b30032/sing-box.schema.json\",\n  \"dns\": {\n    \"servers\": [\n      { \"tag\": \"dns:proxy\", \"address\": \"https://8.8.8.8/dns-query\" },\n      { \"tag\": \"dns:local\", \"address\": \"local\", \"detour\": \"DIRECT\" },\n      { \"tag\": \"dns:reject\", \"address\": \"rcode://refused\" },\n      { \"tag\": \"dns:fakeip\", \"address\": \"fakeip\" }\n    ],\n    \"rules\": [\n      { \"outbound\": \"any\", \"server\": \"dns:local\" },\n      {\n        \"rule_set\": \"geosite:ads\",\n        \"server\": \"dns:reject\",\n        \"disable_cache\": true\n      },\n      { \"rule_set\": \"geosite:private\", \"server\": \"dns:local\" },\n      { \"query_type\": [\"A\", \"AAAA\"], \"server\": \"dns:fakeip\", \"rewrite_ttl\": 1 },\n      { \"clash_mode\": \"direct\", \"server\": \"dns:local\" },\n      { \"clash_mode\": \"global\", \"server\": \"dns:proxy\" },\n      { \"rule_set\": \"geosite:cn\", \"server\": \"dns:local\" },\n      {\n        \"type\": \"logical\",\n        \"mode\": \"and\",\n        \"rules\": [\n          { \"rule_set\": \"geosite:proxy\", \"invert\": true },\n          { \"rule_set\": \"geoip:cn\" }\n        ],\n        \"server\": \"dns:proxy\",\n        \"client_subnet\": \"101.6.6.6\"\n      }\n    ],\n    \"final\": \"dns:proxy\",\n    \"independent_cache\": true,\n    \"fakeip\": {\n      \"enabled\": true,\n      \"inet4_range\": \"198.18.0.0/15\",\n      \"inet6_range\": \"fc00::/18\"\n    }\n  }\n}\n</code></pre>"},{"location":"usage/sing-box/#route","title":"Route","text":"<pre><code>{\n  \"$schema\": \"https://gist.github.com/artiga033/fea992d95ad44dc8d024b229223b1002/raw/83c676c1ec9f37af2bce0505da396b5444b30032/sing-box.schema.json\",\n  \"route\": {\n    \"rules\": [\n      {\n        \"type\": \"logical\",\n        \"mode\": \"or\",\n        \"rules\": [{ \"protocol\": \"dns\" }, { \"port\": 53 }],\n        \"outbound\": \"out:dns\"\n      },\n      {\n        \"type\": \"logical\",\n        \"mode\": \"or\",\n        \"rules\": [\n          { \"port\": 853 },\n          { \"network\": \"udp\", \"port\": 443 },\n          { \"protocol\": \"stun\" }\n        ],\n        \"outbound\": \"REJECT\"\n      },\n      { \"rule_set\": \"rule-set:ads\", \"outbound\": \"REJECT\" },\n      {\n        \"ip_is_private\": true,\n        \"rule_set\": \"rule-set:private\",\n        \"outbound\": \"DIRECT\"\n      },\n      { \"clash_mode\": \"direct\", \"outbound\": \"DIRECT\" },\n      { \"clash_mode\": \"global\", \"outbound\": \"PROXY\" },\n      { \"rule_set\": \"rule-set:cn\", \"outbound\": \"DIRECT\" },\n      { \"rule_set\": \"rule-set:ai\", \"outbound\": \"\ud83e\udd16 AI\" },\n      { \"rule_set\": \"rule-set:download\", \"outbound\": \"\u2601\ufe0f Download\" },\n      { \"rule_set\": \"rule-set:emby\", \"outbound\": \"\ud83c\udf5f Emby\" },\n      { \"rule_set\": \"rule-set:media\", \"outbound\": \"\ud83d\udcfa Media\" }\n    ],\n    \"final\": \"PROXY\",\n    \"auto_detect_interface\": true\n  }\n}\n</code></pre>"}]}